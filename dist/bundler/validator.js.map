{"version":3,"file":"validator.js","sourceRoot":"","sources":["../../src/bundler/validator.ts"],"names":[],"mappings":";;;AAAA,6BAA+B;AAE/B,uBAAyB;AAIzB;IAEI,mBAAoB,MAAqB,EAAU,GAAW;QAA1C,WAAM,GAAN,MAAM,CAAe;QAAU,QAAG,GAAH,GAAG,CAAQ;IAAG,CAAC;IAE3D,4BAAQ,GAAf,UAAgB,MAAc,EAAE,QAAgB;QAE5C,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,cAAc,EAAE;YAE3C,IAAI;gBACA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aACvB;YACD,OAAO,KAAK,EAAE;gBAEV,IAAI,WAAW,GAAG,EAAE,CAAC;gBAErB,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,wDAAwD,CAAC,KAAK,CAAC,CAAC,EAAE;oBACxF,WAAW,GAAG,sDAAsD;wBACpD,iDAAiD,CAAC;iBACrE;gBAED,IAAM,YAAY,GAAG,4BAA4B,GAAG,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG;oBACtE,KAAK,GAAG,QAAQ,GAAG,EAAE,CAAC,GAAG;oBACzB,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG;oBACpF,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG;oBAC3E,WAAW,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBAE9C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;gBAE7B,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;aACjC;SACJ;IACL,CAAC;IACL,gBAAC;AAAD,CAAC,AAhCD,IAgCC;AAhCY,8BAAS","sourcesContent":["import * as acorn from \"acorn\";\r\nimport { Logger } from \"log4js\";\r\nimport * as os from \"os\";\r\n\r\nimport { Configuration } from \"../shared/configuration\";\r\n\r\nexport class Validator {\r\n\r\n    constructor(private config: Configuration, private log: Logger) {}\r\n\r\n    public validate(bundle: string, filename: string) {\r\n\r\n        if (this.config.bundlerOptions.validateSyntax) {\r\n\r\n            try {\r\n                acorn.parse(bundle);\r\n            }\r\n            catch (error) {\r\n\r\n                let possibleFix = \"\";\r\n\r\n                if (error.message.indexOf(\"'import' and 'export' may only appear at the top level\") !== -1) {\r\n                    possibleFix = \"Possible fix: configure karma-typescript to compile \" +\r\n                                    \"es6 modules with karma-typescript-es6-transform\";\r\n                }\r\n\r\n                const errorMessage = \"Invalid syntax in bundle: \" + error.message + os.EOL +\r\n                    \"in \" + filename + os.EOL +\r\n                    \"at line \" + error.loc.line + \", column \" + error.loc.column + \":\" + os.EOL + os.EOL +\r\n                    \"... \" + bundle.slice(error.pos, error.pos + 50) + \" ...\" + os.EOL + os.EOL +\r\n                    possibleFix + (possibleFix ? os.EOL : \"\");\r\n\r\n                this.log.error(errorMessage);\r\n\r\n                throw new Error(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}