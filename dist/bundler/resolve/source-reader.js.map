{"version":3,"file":"source-reader.js","sourceRoot":"","sources":["../../../src/bundler/resolve/source-reader.ts"],"names":[],"mappings":"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","sourcesContent":["import * as acorn from \"acorn\";\r\nimport * as fs from \"fs\";\r\nimport * as os from \"os\";\r\n\r\nimport { Logger } from \"log4js\";\r\n\r\nimport { Configuration } from \"../../shared/configuration\";\r\nimport { BundleItem } from \"../bundle-item\";\r\nimport { Transformer } from \"../transformer\";\r\n\r\nexport class SourceReader {\r\n\r\n    constructor(private config: Configuration,\r\n                private log: Logger,\r\n                private transformer: Transformer) { }\r\n\r\n    public read(bundleItem: BundleItem, onSourceRead: () => void) {\r\n\r\n        this.readFile(bundleItem, (source: string) => {\r\n\r\n            bundleItem.source = source;\r\n            bundleItem.ast = this.createAbstractSyntaxTree(bundleItem);\r\n\r\n            this.transformer.applyTransforms(bundleItem, () => {\r\n                this.assertValidNonScriptSource(bundleItem);\r\n                onSourceRead();\r\n            });\r\n        });\r\n    }\r\n\r\n    private readFile(bundleItem: BundleItem, onSourceRead: (source: string) => void) {\r\n\r\n        if (this.config.bundlerOptions.ignore.indexOf(bundleItem.moduleName) !== -1) {\r\n            onSourceRead(\"module.exports={};\");\r\n        }\r\n        else {\r\n            fs.readFile(bundleItem.filename, (error, data) => {\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                onSourceRead(data.toString());\r\n            });\r\n        }\r\n    }\r\n\r\n    private assertValidNonScriptSource(bundleItem: BundleItem): void {\r\n        if (!bundleItem.isScript() &&\r\n            !bundleItem.source.match(/^\\s*module\\.exports\\s*=/)) {\r\n\r\n            let source = bundleItem.source;\r\n\r\n            try{\r\n                JSON.parse(bundleItem.source);\r\n            }\r\n            catch (jsonError) {\r\n                source = JSON.stringify(bundleItem.source);\r\n            }\r\n\r\n            bundleItem.source = os.EOL + \"module.exports = \" + source + \";\";\r\n        }\r\n    }\r\n\r\n    private createAbstractSyntaxTree(bundleItem: BundleItem): acorn.Node {\r\n\r\n        if (!bundleItem.isScript() ||\r\n            this.config.bundlerOptions.noParse.indexOf(bundleItem.moduleName) !== -1) {\r\n            return undefined;\r\n        }\r\n\r\n        try {\r\n            return acorn.parse(bundleItem.source, this.config.bundlerOptions.acornOptions);\r\n        }\r\n        catch (error) {\r\n            this.log.error(\"Error parsing code: \" + error.message + os.EOL +\r\n                           \"in \" + bundleItem.filename + os.EOL +\r\n                           \"at line \" + error.loc.line + \", column \" + error.loc.column + \":\" + os.EOL + os.EOL +\r\n                           \"... \" + bundleItem.source.slice(error.pos, error.pos + 50) + \" ...\");\r\n            process.exit(1);\r\n        }\r\n    }\r\n}\r\n"]}